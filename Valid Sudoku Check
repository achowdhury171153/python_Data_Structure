class Solution:
    def isValidSudoku(self, board: List[List[str]]) -> bool:
        row=sum(board, [])
        #print(row)
        m=0
        colL=[]
        for i in range(0, len(row),9):
            k=i+9
            sentenceRow= ' '.join(map(str,row[i:k]))
            s = [int(s) for s in str.split(sentenceRow) if s.isdigit()]
            #print(s)
            if len(s)!=len(set(s)):
                return False

            #colL=[]
            for j in range(m,len(row),9):

                #print(row[j])
                sentenceCol= ' '.join(map(str,row[j]))

                if sentenceCol.isdigit():
                    colL.append(sentenceCol)
            m=m+1

            #colL = list(filter(None, colL))
            #print(colL)
            if len(colL)!=len(set(colL)):
                return False
            colL.clear()
        #check 3x3 matrix
        #print(board)
        l=[]
        for i in range(0,3):

            for j in range(0,3):
                l.clear()
                colL.clear()
                l.extend(board[i*3][j*3:j*3+3])
                l.extend(board[i*3 + 1][j*3:j*3+3])
                l.extend((board[i*3 + 2][j*3:j*3+3]))
            #rowcol = ' '.join(map(str,l))

                #print(l)
                rowcol = ' '.join(map(str, l))
                colL = [int(s) for s in str.split(rowcol) if s.isdigit()]

                #print(colL)
                if len(colL) != len(set(colL)):
                    return False


        return True
